//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// <auto-generated>
//------------------------------------------------------------------------------

namespace MoldCalculator.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.Windows.Media;

    public partial class Mold : INotifyPropertyChanged
    {
        public int MoldID { get; set; }
        public string MoldName { get; set; }
        public Nullable<int> Quantity { get; set; }
        public Nullable<int> Quota { get; set; }

        private string _OutsoleCode;
        public string OutsoleCode
        {
            get { return _OutsoleCode; }
            set
            {
                _OutsoleCode = value;
                OnPropertyChanged("OutsoleCode");
            }
        }
        public Nullable<int> SupplierID { get; set; }
        public Nullable<int> ComponentID { get; set; }
        public Nullable<int> Round { get; set; }
        public string SizeNo { get; set; }
        public Nullable<int> Pairs { get; set; }
        public Nullable<double> WorkingDay { get; set; }
        public Nullable<System.DateTime> StartDate { get; set; }
        public Nullable<System.DateTime> FinishDate { get; set; }
        public Brush FinishDateForeground { get; set; }
        public Brush FinishDateBackground { get; set; }
        public Nullable<System.DateTime> RequestDate { get; set; }
        public Nullable<System.DateTime> CreatedTime { get; set; }
        public Nullable<System.DateTime> ModifiedTime { get; set; }


        public event PropertyChangedEventHandler PropertyChanged;
        protected void OnPropertyChanged(string propertyName)
        {
            if (PropertyChanged != null)
            {
                PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

    }
}
